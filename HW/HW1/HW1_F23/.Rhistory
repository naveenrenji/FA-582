nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
# Combine datasets
nyt_data <- rbind(nyt1, nyt2, nyt3)
head(nyt_data)
str(nyt_data)
nyt_data$Gender = as.factor(nyt_data$Gender)
summary(nyt_data)
nyt_data <- nyt_data %>%
mutate(age_group = case_when(
Age < 20  ~ "<20",
Age >= 20 & Age < 30 ~ "20-29",
Age >= 30 & Age < 40 ~ "30-39",
Age >= 40 & Age < 50 ~ "40-49",
Age >= 50 & Age < 60 ~ "50-59",
Age >= 60 & Age < 70 ~ "60-69",
Age >= 70 ~ "70+",
TRUE ~ "NA"
))
nyt_data$age_group = as.factor(nyt_data$age_group)
summary(nyt_data)
# Count rows with 0 Impressions
num_zero_impressions <- nrow(nyt_data[nyt_data$Impressions == 0,])
# Now remove those rows
nyt_data_filtered <- nyt_data[nyt_data$Impressions != 0,]
# Count the rows after removal
num_rows_after <- nrow(nyt_data_filtered)
# Display how many rows were removed
num_rows_removed <- nrow(nyt_data) - num_rows_after
print(paste("Number of rows removed: ", num_rows_removed))
nyt_data <- nyt_data[nyt_data$Impressions != 0,]
# Calculate the median age, excluding the values below 5 and above 80
median_age <- median(nyt_data$Age[(nyt_data$Age >= 1) & (nyt_data$Age <= 80)], na.rm = TRUE)
# Replace ages below 5 and above 80 with the median age
nyt_data$Age[nyt_data$Age < 1 | nyt_data$Age > 80] <- median_age
# Check if the values have been replaced
summary(nyt_data$Age)
nyt_data <- nyt_data %>%
mutate(CTR = Clicks / Impressions)
ggplot(nyt_data,aes(x=age_group, y=CTR, fill=age_group))+geom_boxplot()
library(dplyr)
library(ggplot2)
# Load and combine data
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Data transformations
nyt_data <- nyt_data %>%
mutate(
Gender = as.factor(Gender),
age_group = cut(Age, breaks = c(-Inf, 19, 29, 39, 49, 59, 69, Inf), labels = c("<20", "20-29", "30-39", "40-49", "50-59", "60-69", "70+")),
Impressions = ifelse(Impressions == 0, NA, Impressions),
CTR = Clicks / Impressions,
click_category = case_when(
is.na(Impressions) ~ "No Impressions",
Clicks == 0 & !is.na(Impressions) ~ "No Clicks",
Clicks > 0 ~ "Clicked",
TRUE ~ "Unknown"
)
)
# Data summary for CTR
nyt_summary_CTR <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_CTR = mean(CTR, na.rm = TRUE))
# Data summary for Impressions
nyt_summary_imp <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_impressions = mean(Impressions, na.rm = TRUE))
# Plotting
p1 <- ggplot(nyt_summary_imp, aes(x = age_group, y = mean_impressions, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Impressions by Age Group and Day", x = "Age Group", y = "Average Impressions")
p2 <- ggplot(nyt_summary_CTR, aes(x = age_group, y = mean_CTR, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Click-Through Rate (CTR) by Age Group and Day", x = "Age Group", y = "Average CTR")
p3 <- ggplot(nyt_data, aes(x = age_group, y = CTR, fill = age_group)) +
geom_boxplot() +
labs(title = "Distribution of CTR Across Age Groups", x = "Age Group", y = "CTR")
p4 <- ggplot(nyt_data, aes(x = CTR, colour = age_group)) +
geom_density() +
labs(title = "Density Plot of CTR Across Age Groups", x = "CTR", y = "Density")
# Display plots
p1
p2
p3
p4
library(dplyr)
library(ggplot2)
# Load and combine data
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Data Cleaning
nyt_data <- nyt_data %>%
filter(Impressions != 0) %>%
mutate(
Gender = as.factor(Gender),
age_group = cut(Age, breaks = c(-Inf, 19, 29, 39, 49, 59, 69, Inf), labels = c("<20", "20-29", "30-39", "40-49", "50-59", "60-69", "70+")),
median_age = median(Age[Age >= 1 & Age <= 90], na.rm = TRUE),
Age = ifelse(Age < 1 | Age > 90, median_age, Age),
CTR = Clicks / Impressions,
click_category = case_when(
Impressions == 0 ~ "No Impressions",
Clicks == 0 ~ "No Clicks",
Clicks > 0 ~ "Clicked",
TRUE ~ "Unknown"
)
)
# Data summary for CTR
nyt_summary_CTR <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_CTR = mean(CTR, na.rm = TRUE))
# Data summary for Impressions
nyt_summary_imp <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_impressions = mean(Impressions, na.rm = TRUE))
# Plotting
p1 <- ggplot(nyt_summary_imp, aes(x = age_group, y = mean_impressions, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Impressions by Age Group and Day", x = "Age Group", y = "Average Impressions")
p2 <- ggplot(nyt_summary_CTR, aes(x = age_group, y = mean_CTR, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Click-Through Rate (CTR) by Age Group and Day", x = "Age Group", y = "Average CTR")
p3 <- ggplot(nyt_data, aes(x = age_group, y = CTR, fill = age_group)) +
geom_boxplot() +
labs(title = "Distribution of CTR Across Age Groups", x = "Age Group", y = "CTR")
p4 <- ggplot(nyt_data, aes(x = CTR, colour = age_group)) +
geom_density() +
labs(title = "Density Plot of CTR Across Age Groups", x = "CTR", y = "Density")
# Display plots
p1
p2
p3
p4
#Naveen Renji CWID - 20016323
#Problem 2 -
#The datasets provided nyt1.csv, nyt2.csv, and nyt3.csv represents three (simulated) days of ads
#shown and clicks recorded on the New York Times homepage. Each row represents a single
#user. There are 5 columns: age, gender (0=female, 1=male), number impressions, number
#clicks, and logged-in. Use R to handle this data. Perform some exploratory data analysis:
#• Create a new variable, age_group, that categorizes users as “<20”, “20-29”, “30-39”, “40-49”, “50-59”, “60-69”, and “70+”.
#• For each day:
#  o Plot the distribution of number of impressions and click-through-rate (CTR = #clicks / #impressions) for these age categories
#  o Define a new variable to segment or categorize users based on their click behavior.
#  o Explore the data and make visual and quantitative comparisons across user segments/demographics (<20-year-old males versus <20-year old females or logged-in versus not, for example).
#• Extend your analysis across days. Visualize some metrics and distributions over time.
#For plotting, it takes some time atleast on my laptop,
#please give it some time, and incase the error 'server error - invalid plot index' comes,
#its beacuse r studio took too long to plot, but it will work if you just wait and try
# Load necessary libraries
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(dplyr)
library(ggplot2)
# Load data and add a Day column
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
# Combine datasets
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Task 1: Create Age_group variable
nyt_data <- nyt_data %>%
mutate(
Age_group = case_when(
Age < 20 ~ "<20",
Age >= 20 & Age < 30 ~ "20-29",
Age >= 30 & Age < 40 ~ "30-39",
Age >= 40 & Age < 50 ~ "40-49",
Age >= 50 & Age < 60 ~ "50-59",
Age >= 60 & Age < 70 ~ "60-69",
Age >= 70 ~ "70+"
)
)
# Calculate CTR, handling Impressions == 0 by removing them
nyt_data <- nyt_data %>%
filter(Impressions != 0) %>%
mutate(
CTR = Clicks / Impressions
)
summary(nyt_data$CTR)
# Correlation analysis
cor_data <- nyt_data %>% select(Age, Gender, CTR)
print(cor(cor_data, use = "complete.obs"))
# creating categories based on CTR - doing a split by 5
nyt_data <- nyt_data %>%
mutate(
CTR_category = case_when(
CTR == 0 ~ "No Clicks",
CTR > 0 & CTR <= 0.2 ~ "Low",
CTR > 0.2 & CTR <= 0.5 ~ "Moderate",
CTR > 0.5 & CTR <= 0.75 ~ "High",
CTR > 0.75 & CTR <= 1 ~ "VeryHigh",
TRUE ~ "Unknown"
)
)
# Compare <20-year-old males vs. <20-year-old females for CTR
ggplot(subset(nyt_data, Age_group == "<20"), aes(x = as.factor(Gender), y = CTR)) +
geom_point(aes(color = CTR_category), alpha = 0.6, position = "jitter") +
ggtitle("CTR for <20-year-old Males vs Females") +
xlab("Gender (0=Female, 1=Male)") +
ylab("CTR") +
facet_wrap(~ Day)
# Compare Logged-in vs Not Logged-in for CTR
ggplot(nyt_data, aes(x = as.factor(Signed_In), y = CTR)) +
geom_point(aes(color = CTR_category), alpha = 0.6, position = "jitter") +
ggtitle("CTR for Logged-in vs Not Logged-in") +
xlab("Logged-in Status") +
ylab("CTR") +
facet_wrap(~ Day)
# Calculate average CTR for each age group
nyt_data_avg <- nyt_data %>%
group_by(Age_group) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each age group
ggplot(nyt_data_avg, aes(x = Age_group, y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Age Group") +
xlab("Age Group") +
ylab("Average CTR")
# Calculate average CTR for each gender
nyt_data_gender_avg <- nyt_data %>%
group_by(Gender) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each gender
ggplot(nyt_data_gender_avg, aes(x = as.factor(Gender), y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Gender") +
xlab("Gender (0=Female, 1=Male)") +
ylab("Average CTR")
# Calculate average CTR for each day
nyt_data_day_avg <- nyt_data %>%
group_by(Day) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each day
ggplot(nyt_data_day_avg, aes(x = Day, y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Day") +
xlab("Day") +
ylab("Average CTR")
ggplot(nyt_data, aes(x = Age_group, y = Impressions)) +
geom_bar(stat = "summary", fun = "mean") +
ggtitle("Average Impressions by Age Group Over Time") +
xlab("Age Group") +
ylab("Average Impressions") +
facet_wrap(~ Day)
#Naveen Renji CWID - 20016323
#Problem 2 -
#For plotting, it takes some time atleast on my laptop,
#please give it some time, and incase the error 'server error - invalid plot index' comes,
#its beacuse r studio took too long to plot, but it will work if you just wait and try
# Load necessary libraries
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(dplyr)
library(ggplot2)
# Load data and add a Day column
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
# Combine datasets
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Data Cleaning
nyt_data <- nyt_data %>%
filter(Impressions != 0) %>%
mutate(
Gender = as.factor(Gender),
age_group = cut(Age, breaks = c(-Inf, 19, 29, 39, 49, 59, 69, Inf), labels = c("<20", "20-29", "30-39", "40-49", "50-59", "60-69", "70+")),
median_age = median(Age[Age >= 1 & Age <= 90], na.rm = TRUE),
Age = ifelse(Age < 1 | Age > 90, median_age, Age),
CTR = Clicks / Impressions,
click_category = case_when(
Impressions == 0 ~ "No Impressions",
Clicks == 0 ~ "No Clicks",
Clicks > 0 ~ "Clicked",
TRUE ~ "Unknown"
)
)
# Data summary for CTR
nyt_summary_CTR <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_CTR = mean(CTR, na.rm = TRUE))
# Data summary for Impressions
nyt_summary_imp <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_impressions = mean(Impressions, na.rm = TRUE))
# Correlation analysis
cor_data <- nyt_data %>% select(Age, Gender, CTR)
print(cor(cor_data, use = "complete.obs"))
#Naveen Renji CWID - 20016323
#Problem 2 -
#For plotting, it takes some time atleast on my laptop,
#please give it some time, and incase the error 'server error - invalid plot index' comes,
#its beacuse r studio took too long to plot, but it will work if you just wait and try
# Load necessary libraries
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(dplyr)
library(ggplot2)
# Load data and add a Day column
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
# Combine datasets
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Data Cleaning
nyt_data <- nyt_data %>%
filter(Impressions != 0) %>%
mutate(
Gender = as.factor(Gender),
age_group = cut(Age, breaks = c(-Inf, 19, 29, 39, 49, 59, 69, Inf), labels = c("<20", "20-29", "30-39", "40-49", "50-59", "60-69", "70+")),
median_age = median(Age[Age >= 1 & Age <= 90], na.rm = TRUE),
Age = ifelse(Age < 1 | Age > 90, median_age, Age),
CTR = Clicks / Impressions,
click_category = case_when(
Impressions == 0 ~ "No Impressions",
Clicks == 0 ~ "No Clicks",
Clicks > 0 ~ "Clicked",
TRUE ~ "Unknown"
)
)
# Data summary for CTR
nyt_summary_CTR <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_CTR = mean(CTR, na.rm = TRUE))
# Data summary for Impressions
nyt_summary_imp <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_impressions = mean(Impressions, na.rm = TRUE))
# creating categories based on CTR - doing a split by 5
nyt_data <- nyt_data %>%
mutate(
CTR_category = case_when(
CTR == 0 ~ "No Clicks",
CTR > 0 & CTR <= 0.2 ~ "Low",
CTR > 0.2 & CTR <= 0.5 ~ "Moderate",
CTR > 0.5 & CTR <= 0.75 ~ "High",
CTR > 0.75 & CTR <= 1 ~ "VeryHigh",
TRUE ~ "Unknown"
)
)
# Compare <20-year-old males vs. <20-year-old females for CTR
ggplot(subset(nyt_data, Age_group == "<20"), aes(x = as.factor(Gender), y = CTR)) +
geom_point(aes(color = CTR_category), alpha = 0.6, position = "jitter") +
ggtitle("CTR for <20-year-old Males vs Females") +
xlab("Gender (0=Female, 1=Male)") +
ylab("CTR") +
facet_wrap(~ Day)
#Naveen Renji CWID - 20016323
#Problem 2 -
#For plotting, it takes some time atleast on my laptop,
#please give it some time, and incase the error 'server error - invalid plot index' comes,
#its beacuse r studio took too long to plot, but it will work if you just wait and try
# Load necessary libraries
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")
library(dplyr)
library(ggplot2)
# Load data and add a Day column
nyt1 <- read.csv("nyt1.csv")
nyt1$Day <- "Day1"
nyt2 <- read.csv("nyt2.csv")
nyt2$Day <- "Day2"
nyt3 <- read.csv("nyt3.csv")
nyt3$Day <- "Day3"
# Combine datasets
nyt_data <- rbind(nyt1, nyt2, nyt3)
# Data Cleaning
nyt_data <- nyt_data %>%
filter(Impressions != 0) %>%
mutate(
Gender = as.factor(Gender),
age_group = cut(Age, breaks = c(-Inf, 19, 29, 39, 49, 59, 69, Inf), labels = c("<20", "20-29", "30-39", "40-49", "50-59", "60-69", "70+")),
median_age = median(Age[Age >= 1 & Age <= 90], na.rm = TRUE),
Age = ifelse(Age < 1 | Age > 90, median_age, Age),
CTR = Clicks / Impressions,
click_category = case_when(
Impressions == 0 ~ "No Impressions",
Clicks == 0 ~ "No Clicks",
Clicks > 0 ~ "Clicked",
TRUE ~ "Unknown"
)
)
# Data summary for CTR
nyt_summary_CTR <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_CTR = mean(CTR, na.rm = TRUE))
# Data summary for Impressions
nyt_summary_imp <- nyt_data %>%
group_by(Day, age_group) %>%
summarise(mean_impressions = mean(Impressions, na.rm = TRUE))
# creating categories based on CTR - doing a split by 5
nyt_data <- nyt_data %>%
mutate(
CTR_category = case_when(
CTR == 0 ~ "No Clicks",
CTR > 0 & CTR <= 0.2 ~ "Low",
CTR > 0.2 & CTR <= 0.5 ~ "Moderate",
CTR > 0.5 & CTR <= 0.75 ~ "High",
CTR > 0.75 & CTR <= 1 ~ "VeryHigh",
TRUE ~ "Unknown"
)
)
# Compare <20-year-old males vs. <20-year-old females for CTR
ggplot(subset(nyt_data, age_group == "<20"), aes(x = as.factor(Gender), y = CTR)) +
geom_point(aes(color = CTR_category), alpha = 0.6, position = "jitter") +
ggtitle("CTR for <20-year-old Males vs Females") +
xlab("Gender (0=Female, 1=Male)") +
ylab("CTR") +
facet_wrap(~ Day)
# Compare Logged-in vs Not Logged-in for CTR
ggplot(nyt_data, aes(x = as.factor(Signed_In), y = CTR)) +
geom_point(aes(color = CTR_category), alpha = 0.6, position = "jitter") +
ggtitle("CTR for Logged-in vs Not Logged-in") +
xlab("Logged-in Status") +
ylab("CTR") +
facet_wrap(~ Day)
# Calculate average CTR for each age group
nyt_data_avg <- nyt_data %>%
group_by(age_group) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each age group
ggplot(nyt_data_avg, aes(x = age_group, y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Age Group") +
xlab("Age Group") +
ylab("Average CTR")
# Calculate average CTR for each gender
nyt_data_gender_avg <- nyt_data %>%
group_by(Gender) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each gender
ggplot(nyt_data_gender_avg, aes(x = as.factor(Gender), y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Gender") +
xlab("Gender (0=Female, 1=Male)") +
ylab("Average CTR")
# Calculate average CTR for each day
nyt_data_day_avg <- nyt_data %>%
group_by(Day) %>%
summarise(avg_CTR = mean(CTR, na.rm = TRUE))
# Visualize the average CTR for each day
ggplot(nyt_data_day_avg, aes(x = Day, y = avg_CTR)) +
geom_col() +
ggtitle("Average CTR by Day") +
xlab("Day") +
ylab("Average CTR")
ggplot(nyt_data, aes(x = age_group, y = Impressions)) +
geom_bar(stat = "summary", fun = "mean") +
ggtitle("Average Impressions by Age Group Over Time") +
xlab("Age Group") +
ylab("Average Impressions") +
facet_wrap(~ Day)
# Plotting
ggplot(nyt_summary_imp, aes(x = age_group, y = mean_impressions, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Impressions by Age Group and Day", x = "Age Group", y = "Average Impressions")
ggplot(nyt_summary_CTR, aes(x = age_group, y = mean_CTR, color = Day, group = Day)) +
geom_line() +
labs(title = "Variation in Average Click-Through Rate (CTR) by Age Group and Day", x = "Age Group", y = "Average CTR")
ggplot(nyt_data, aes(x = age_group, y = CTR, fill = age_group)) +
geom_boxplot() +
labs(title = "Distribution of CTR Across Age Groups", x = "Age Group", y = "CTR")
ggplot(nyt_data, aes(x = CTR, colour = age_group)) +
geom_density() +
labs(title = "Density Plot of CTR Across Age Groups", x = "CTR", y = "Density")
# Create a subset for <20-year-old males and females
subset_data <- nyt_data %>%
filter(age_group == "<20") %>%
select(Gender, CTR)
# Generate the plot for CTR comparison
ggplot(subset_data, aes(x = Gender, y = CTR)) +
geom_boxplot() +
ggtitle("CTR for <20-year-old Males vs Females") +
xlab("Gender") +
ylab("Click Through Rate (CTR)") +
scale_x_discrete(labels = c("M" = "Male", "F" = "Female")) +
theme_minimal()
View(nyt_data_avg)
View(nyt_data_avg_by_day)
View(nyt_data_avg_by_day)
View(nyt_data_day_avg)
View(nyt_data_filtered)
View(nyt_data_gender_avg)
View(nyt_summary)
View(nyt_summary)
View(nyt_summary_CTR)
View(nyt_summary_imp)
View(p4)
View(p4)
View(p2)
View(p1)
View(subset_data)
